package schoolmanagement.view;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import javax.swing.JOptionPane;
import schoolmanagement.config.Configuration;
import java.sql.SQLException;
import schoolmanagement.test.Test;

@SuppressWarnings("serial")
public class ConfigurationForm extends javax.swing.JDialog {

	/**
	 * Creates new form ConfigurationForm
	 */
	public ConfigurationForm(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
		setLocationRelativeTo(null);
		populateFields();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		txtServerPort = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		txtDbHost = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		txtDbPort = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		txtDbUsername = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		txtDbName = new javax.swing.JTextField();
		jLabel7 = new javax.swing.JLabel();
		btnSave = new javax.swing.JButton();
		txtDbPassword = new javax.swing.JPasswordField();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
		jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel1.setText("Server port:");

		txtServerPort.setEditable(false);

		jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
		jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel2.setText("Database host:");

		jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
		jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel3.setText("Database port:");

		jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
		jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel4.setText("Database user username:");

		jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
		jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel5.setText("Database user password:");

		jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
		jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel6.setText("Database name:");

		jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		jLabel7.setText("Server configuration");

		btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
		btnSave.setText("Save");
		btnSave.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSaveActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
								layout.createSequentialGroup().addContainerGap()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(txtDbPort, javax.swing.GroupLayout.Alignment.TRAILING,
														javax.swing.GroupLayout.PREFERRED_SIZE, 116,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jLabel1, javax.swing.GroupLayout.Alignment.TRAILING,
														javax.swing.GroupLayout.PREFERRED_SIZE, 116,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGroup(layout.createSequentialGroup().addGap(51, 51, 51).addGroup(layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(txtServerPort, javax.swing.GroupLayout.DEFAULT_SIZE, 116,
												Short.MAX_VALUE)
										.addComponent(txtDbHost).addComponent(jLabel3,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.PREFERRED_SIZE, 116,
										javax.swing.GroupLayout.PREFERRED_SIZE))))
				.addGap(144, 144, 144)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
								layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jLabel4)
										.addGap(60, 60, 60))
						.addGroup(layout.createSequentialGroup()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
										.addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(txtDbPassword, javax.swing.GroupLayout.Alignment.LEADING,
												javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
										.addComponent(txtDbName, javax.swing.GroupLayout.Alignment.LEADING,
												javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
										.addComponent(txtDbUsername, javax.swing.GroupLayout.Alignment.LEADING,
												javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
										.addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
				.addGroup(layout.createSequentialGroup().addGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(193, 193, 193).addComponent(btnSave,
								javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createSequentialGroup().addGap(154, 154, 154).addComponent(jLabel7)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(31, 31, 31).addComponent(jLabel7).addGap(49, 49, 49)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
						.addGroup(layout.createSequentialGroup().addComponent(jLabel1).addGap(18, 18, 18).addComponent(
								txtServerPort, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createSequentialGroup().addComponent(jLabel4).addGap(18, 18, 18).addComponent(
								txtDbUsername, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
				.addGap(18, 18, 18)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2)
						.addComponent(jLabel5))
				.addGap(18, 18, 18)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(txtDbHost, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(txtDbPassword, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addGap(18, 18, 18)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
						.addGroup(layout.createSequentialGroup()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel3).addComponent(jLabel6))
								.addGap(18, 18, 18).addComponent(txtDbPort, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addComponent(txtDbName, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
				.addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addGap(18, 18, 18)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSaveActionPerformed

		String serverPort = txtServerPort.getText();
		String dbHost = txtDbHost.getText();
		String dbPort = txtDbPort.getText();
		String dbName = txtDbName.getText();
		String dbUsername = txtDbUsername.getText();
		@SuppressWarnings("deprecation")
		String dbPassword = txtDbPassword.getText();

		// testing if server can connect to database with given data
		try {
			Test.testConnection(dbHost, dbPort, dbName, dbUsername, dbPassword);

			writeConfigFile(serverPort, dbHost, dbPort, dbName, dbUsername, dbPassword);

			JOptionPane.showMessageDialog(this, "Successfully connected to database!", "Success",
					JOptionPane.INFORMATION_MESSAGE);
			this.dispose();
		} catch (SQLException ex) {
			JOptionPane.showMessageDialog(this, "Error while connecting to database.\nPlease check your input!",
					"Error", JOptionPane.ERROR_MESSAGE);
		} catch (IOException ex) {
			JOptionPane.showMessageDialog(this, "Error while writing input in file!", "Error",
					JOptionPane.ERROR_MESSAGE);
		}
	}// GEN-LAST:event_btnSaveActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnSave;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JTextField txtDbHost;
	private javax.swing.JTextField txtDbName;
	private javax.swing.JPasswordField txtDbPassword;
	private javax.swing.JTextField txtDbPort;
	private javax.swing.JTextField txtDbUsername;
	private javax.swing.JTextField txtServerPort;
	// End of variables declaration//GEN-END:variables

	private void populateFields() {

		try (FileInputStream inStream = new FileInputStream(Configuration.CONFIG_FILE_PATH)) {
			Properties properties = new Properties();
			properties.load(inStream);
			txtDbHost.setText(properties.getProperty(Configuration.DB_HOST));
			txtDbPort.setText(properties.getProperty(Configuration.DB_PORT));
			txtDbName.setText(properties.getProperty(Configuration.DB_NAME));
			txtDbUsername.setText(properties.getProperty(Configuration.DB_USERNAME));
			txtDbPassword.setText(properties.getProperty(Configuration.DB_PASSWORD));
			txtServerPort.setText(properties.getProperty(Configuration.SERVER_PORT));
		} catch (IOException ex) {
			JOptionPane.showMessageDialog(this, "Failed to read configuration properties", "Error",
					JOptionPane.ERROR_MESSAGE);
			dispose();
		}
	}

	private void writeConfigFile(String serverPort, String dbHost, String dbPort, String dbName, String dbUsername,
			String dbPassword) throws IOException {

		try (FileOutputStream out = new FileOutputStream(Configuration.CONFIG_FILE_PATH);) {
			Properties props = new Properties();
			props.setProperty(Configuration.SERVER_PORT, serverPort);
			props.setProperty(Configuration.DB_HOST, dbHost);
			props.setProperty(Configuration.DB_PORT, dbPort);
			props.setProperty(Configuration.DB_NAME, dbName);
			props.setProperty(Configuration.DB_USERNAME, dbUsername);
			props.setProperty(Configuration.DB_PASSWORD, dbPassword);
			props.store(out, "");
		}

	}

}
